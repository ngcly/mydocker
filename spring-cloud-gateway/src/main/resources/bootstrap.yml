server:
  port: 8002

spring:
  application:
    name: spring-cloud-gateway
  boot:
    admin:
      client:
        url: http://spring-cloud-admin
  # zipkin 服务地址 这里使用服务名 动态获取地址
  zipkin:
    base-url: http://spring-cloud-zipkin/
  # config client 端必须用bootstrap 否则会被默认的给覆盖
  cloud:
    #消息总线
    bus:
      enabled: true
      trace:
        enabled: true
    #网关
    gateway:
      #跨域配置
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
              - OPTION
              - POST
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true
      routes:
        #随便命名 必须保证唯一
        - id: spring-cloud-user
          #开头（lb代表从注册中心获取服务） 要转发的的服务地址
          uri: lb://spring-cloud-user
          predicates:
            - Path=/us/**
          filters:
            # 熔断 name 必须是 Hystrix
            - name: Hystrix
              args:
                name: default
                fallbackUri: forward:/defaultFallback
            - StripPrefix=1
            # redis限流  name 必须是 RequestRateLimiter
            - name: RequestRateLimiter
              args:
                #令牌桶填充速率
                redis-rate-limiter.replenishRate: 1
                #令牌桶容量 即每秒最多通行5个
                redis-rate-limiter.burstCapacity: 5
                #使用 SpEL 表达式 对应 bean
                key-resolver: '#{@ipKeyResolver}'
        - id: spring-cloud-other
          uri: lb://spring-cloud-other
          predicates:
            - Path=/ot/**
          filters:
            - name: Hystrix
              args:
                name: default
                fallbackUri: forward:/defaultFallback
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                #令牌桶填充速率
                redis-rate-limiter.replenishRate: 1
                #令牌桶容量 即每秒最多通行5个
                redis-rate-limiter.burstCapacity: 5
                #使用 SpEL 表达式 对应 bean
                key-resolver: '#{@ipKeyResolver}'

    config:
      discovery:
        #表示使用服务发现组件的config serve，而不是自己指定的
        enabled: true
        #指定config serve的 service-id
        service-id: spring-cloud-config
      name: application-gateway,application-config
      username: ngcly
      password: 123456
      profile: dev

#注册中心
eureka:
  client:
    service-url:
      defaultZone: http://ngcly:123456@localhost:8000/eureka/
    registry-fetch-interval-seconds: 5
  instance:
    prefer-ip-address: true

#gateway 此处必须要设为true feign才会熔断
feign:
  hystrix:
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
