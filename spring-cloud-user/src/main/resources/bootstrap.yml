server:
  port: 8006
spring:
  application:
    name: spring-cloud-user
  boot:
    admin:
      client:
        url: http://spring-cloud-admin
  # zipkin 服务地址 这里使用服务名 动态获取地址
  zipkin:
    base-url: http://spring-cloud-zipkin/
    sender:
      type: rabbit
  sleuth:
    sampler:
      probability: 1.0
  # config client 端必须用bootstrap 否则会被默认的给覆盖
  cloud:
    config:
      discovery:
        #表示使用服务发现组件的config serve，而不是自己指定的
        enabled: true
        #指定config serve的 service-id
        service-id: spring-cloud-config
      name: application-config
      username: ngcly
      password: 123456
      profile: dev
    #消息总线
    bus:
      enabled: true
      trace:
        enabled: true
  mvc:
    locale: zh_CN
eureka:
  client:
    service-url:
      defaultZone: http://ngcly:123456@localhost:8000/eureka
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

feign:
  hystrix:
    enabled: true

#lcn事务管理器ip端口
tx-lcn:
  client:
    #TM 集群的情况下可以写多个地址，逗号隔开
    manager-address: 127.0.0.1:7970
    # 是否启动LCN负载均衡策略(优化选项，开启与否，功能不受影响)
  ribbon:
    loadbalancer:
      dtx:
        enabled: true
  # 开启日志,默认为false
  logger:
    enabled: true
    driver-class-name: ${spring.datasource.driver-class-name}
    jdbc-url: ${spring.datasource.url}
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}
